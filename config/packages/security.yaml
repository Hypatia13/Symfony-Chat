security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext
    
    providers:
        chain_provider:
                chain:
                    providers: [in_memory, our_db_provider]
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
        in_memory:
            memory:
                users:
                    max:
                        password: max
                        roles: 'ROLE_USER'
                    admin:
                        password: admin
                        roles: 'ROLE_ADMIN'
                 
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:    ^/
           # http_basic: ~
            provider: chain_provider
            anonymous: ~
            form_login:
                login_path: login
                check_path: login

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/chat, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }